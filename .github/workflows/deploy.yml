name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build the React app
        working-directory: ./frontend
        run: npm run build

      - name: Copy frontend files via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          mkdir -p /tmp/build
          cp -R frontend/build/* /tmp/build/
          echo "$SSH_PRIVATE_KEY" > /tmp/webster.systems.key.pem
          chmod 600 /tmp/webster.systems.key.pem
          scp -o StrictHostKeyChecking=no -i /tmp/webster.systems.key.pem -r /tmp/build/* $EC2_USER@$EC2_HOST:/home/ec2-user/ws-front-end/frontend

      - name: Copy backend files via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          scp -o StrictHostKeyChecking=no -i /tmp/webster.systems.key.pem -r backend/* $EC2_USER@$EC2_HOST:/home/ec2-user/ws-front-end/backend
        
      - name: Install dependencies and start servers
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/webster.systems.key.pem $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/ec2-user/ws-front-end/frontend
            npm install
            cd /home/ec2-user/ws-front-end/backend
            npm install
            pm2 restart all || pm2 start server.js --name ws-backend
          EOF

