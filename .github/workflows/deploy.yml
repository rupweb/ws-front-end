name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build the React app
        working-directory: ./frontend
        run: npm run build

      - name: Prepare SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/webster.systems.key.pem
          chmod 600 /tmp/webster.systems.key.pem

      - name: Copy frontend build files via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          scp -o StrictHostKeyChecking=no -i /tmp/webster.systems.key.pem -r frontend/build/* $EC2_USER@$EC2_HOST:/home/ec2-user/ws-front-end/frontend/build
          scp -o StrictHostKeyChecking=no -i /tmp/webster.systems.key.pem -r frontend/server.js $EC2_USER@$EC2_HOST:/home/ec2-user/ws-front-end/frontend
          scp -o StrictHostKeyChecking=no -i /tmp/webster.systems.key.pem frontend/package.json $EC2_USER@$EC2_HOST:/home/ec2-user/ws-front-end/frontend

      - name: Copy backend files via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          scp -o StrictHostKeyChecking=no -i /tmp/webster.systems.key.pem -r backend/* $EC2_USER@$EC2_HOST:/home/ec2-user/ws-front-end/backend

      - name: Copy proxy server files via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          scp -o StrictHostKeyChecking=no -i /tmp/webster.systems.key.pem -r proxy/* $EC2_USER@$EC2_HOST:/home/ec2-user/reverse-proxy

      - name: Install dependencies and start servers
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/webster.systems.key.pem $EC2_USER@$EC2_HOST << 'EOF'
          # Install (or not) dependencies for the frontend
          # cd /home/ec2-user/ws-front-end/frontend
          # npm install --only=prod

          # Install dependencies for the backend
          # cd /home/ec2-user/ws-front-end/backend
          # npm install

          # Install dependencies for the proxy server
          # cd /home/ec2-user/reverse-proxy
          # npm install

          # Start/restart the backend server with PM2
          pm2 restart ws-backend || pm2 start /home/ec2-user/ws-front-end/backend/server.js --name ws-backend

          # Start/restart the proxy server with PM2
          pm2 restart proxy-server || pm2 start /home/ec2-user/reverse-proxy/proxy-server.js --name proxy-server

          # Start/restart the frontend server with PM2
          pm2 restart ws-frontend || pm2 start /home/ec2-user/ws-front-end/frontend/server.js --name ws-frontend

          EOF
